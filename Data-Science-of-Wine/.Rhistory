ggplot(aes(word, diff)) +
geom_col() +
xlab(NULL) +
coord_flip()+
jameson()
dtxt <- wtxt %>%
filter(province=="Oregon" | province=="California") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(province, word) %>%
count() %>%
group_by(province) %>%
mutate(proportion = n / sum(n)) %>%
pivot_wider(id_cols = word, names_from = province, values_from = proportion) %>%
mutate(diff=(Oregon-California)*100)
dtxt %>%
top_n(25, diff) %>%
mutate(word = reorder(word, diff)) %>%
ggplot(aes(word, log(diff))) +
geom_col() +
xlab(NULL) +
coord_flip()+
jameson()
dtxt <- wtxt %>%
filter(province=="Oregon" | province=="California") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(province, word) %>%
count() %>%
group_by(province) %>%
mutate(proportion = n / sum(n)) %>%
pivot_wider(id_cols = word, names_from = province, values_from = proportion) %>%
mutate(diff=Oregon-California)
dtxt %>%
top_n(25, diff) %>%
mutate(word = reorder(word, diff)) %>%
ggplot(aes(word, diff)) +
geom_col() +
xlab(NULL) +
coord_flip()+
jameson()
dtxt <- wtxt %>%
filter(province=="Oregon" | province=="Burgundy") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(province, word) %>%
count() %>%
group_by(province) %>%
mutate(proportion = n / sum(n)) %>%
pivot_wider(id_cols = word, names_from = province, values_from = proportion) %>%
mutate(diff=Oregon-California)
dtxt <- wtxt %>%
filter(province=="Oregon" | province=="Burgundy") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(province, word) %>%
count() %>%
group_by(province) %>%
mutate(proportion = n / sum(n)) %>%
pivot_wider(id_cols = word, names_from = province, values_from = proportion) %>%
mutate(diff=Oregon-Burgundy)
dtxt %>%
top_n(25, diff) %>%
mutate(word = reorder(word, diff)) %>%
ggplot(aes(word, diff)) +
geom_col() +
xlab(NULL) +
coord_flip()+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
mutate(character=
case_when(
str_detect(description,"fruit") ~ 'fruit',
str_detect(description,"chocolate") ~ 'chocolate',
str_detect(description,"tart") ~ 'tart'
)
) %>%
filter(!is.na(character)) %>%
ggplot(aes(points, fill=character))+
geom_density(alpha=.5)+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
mutate(character=
case_when(
str_detect(description,"fruit") ~ 'fruit',
str_detect(description,"chocolate") ~ 'chocolate',
str_detect(description,"berry") ~ 'cherry',
str_detect(description,"tart") ~ 'tart'
)
) %>%
filter(!is.na(character)) %>%
ggplot(aes(character, points, fill=character))+
geom_boxplot()+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
mutate(character=
case_when(
str_detect(description,"fruit") ~ 'fruit',
str_detect(description,"chocolate") ~ 'chocolate',
str_detect(description,"berry") ~ 'berry',
str_detect(description,"tart") ~ 'tart'
)
) %>%
filter(!is.na(character)) %>%
ggplot(aes(character, points, fill=character))+
geom_boxplot()+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
mutate(character=
case_when(
str_detect(description,"fruit") ~ 'fruit',
str_detect(description,"chocolate") ~ 'chocolate',
str_detect(description,"tart") ~ 'tart'
)
) %>%
filter(!is.na(character)) %>%
ggplot(aes(character, points, fill=character))+
geom_boxplot()+
jameson()
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,"chocolate")))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe <- str_c("For **Oregon Pinots with notes of Chocolate**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
pe = list()
flavors = c("fruit","chocolate","tart")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
View(pe)
pe[["fruit"]]
pe[["chocolate"]]
pe[["tart"]]
pe = list()
flavors = c("cherry","rasberry","cranberry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
pe = list()
flavors = c("cherry","rasberry","strawberry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
pe = list()
flavors = c("cherry","rasberry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
pe = list()
flavors = c("cherry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
pe = list()
flavors = c("cherry", "strawberry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
View(pe)
View(pe)
pe[["cherry"]]
pe[["strawberry"]]
wine %>%
filter(variety=="Pinot Noir") %>%
filter(province %in% pinots) %>%
mutate(points_per_dollar= points/price) %>%
ggplot(aes(x=province, y=log(points_per_dollar)))+
geom_boxplot()+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
filter(province %in% pinots) %>%
mutate(points_per_dollar= points/price) %>%
ggplot(aes(x=province, y=log(points_per_dollar), fill=province))+
geom_boxplot()+
jameson()
wine %>%
filter(variety=="Pinot Noir") %>%
filter(province %in% pinots) %>%
ggplot(aes(x=province, y=points, fill=province))+
geom_boxplot()+
jameson()
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(points = mean(points))
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(avg_points = mean(points), avg_price = mean(price)) %>%
arrange(desc(avg_points)) %>%
slice(1:10)
pe = list()
flavors = c("cherry", "blackberry", "strawberry")
for(f in flavors){
model <- lm(log(price)~points, filter(wine,province=="Oregon", variety=="Pinot Noir", str_detect(description,f)))
pct <- round((exp(coef(model)["points"]) - 1) * 100,2)
pe[[f]] <- str_c("For Oregon Pinots with notes of **",f,"**, a 1 point ratings increase leads to a **",pct,"%** increase in price.")
}
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(avg_points = mean(points), avg_price = mean(price)) %>%
arrange(price, desc(avg_points)) %>%
slice(1:10)
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(avg_points = mean(points), avg_price = mean(price)) %>%
arrange(avg_price, desc(avg_points)) %>%
slice(1:10)
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(avg_points = mean(points), avg_price = mean(price)) %>%
arrange(desc(avg_price), desc(avg_points)) %>%
slice(1:10)
View(pe)
pe[["blackberry"]]
pe[["strawberry"]]
pe[["cherry"]]
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(word) %>%
summarize(avg_points = mean(points), avg_price = mean(price)) %>%
arrange(desc(avg_price), desc(avg_points)) %>%
slice(1:10)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning = FALSE)
library(tidyverse)
library(tidytext)
library(scales)
wine <- read_csv("winemag-data.csv") %>%
filter(!is.na(price)) %>%
mutate(year = as.numeric(str_extract(title,"(\\d{4})"))) %>%
rowid_to_column("id")
View(wine)
View(wtxt)
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning = FALSE)
library(tidyverse)
library(tidytext)
library(scales)
wine <- read_csv("winemag-data.csv") %>%
filter(!is.na(price)) %>%
mutate(year = as.numeric(str_extract(title,"(\\d{4})")))
data(stop_words)
wtxt <- wine %>%
filter(variety=="Pinot Noir") %>%
unnest_tokens(word, description) %>%
anti_join(stop_words) %>%
filter(str_detect(string = word, pattern = "[a-z+]")) %>%  # get rid weird non alphas
filter(str_length(word)>3) %>%  # get rid of strings shorter than 3 characters
group_by(variety, word) %>%
mutate(total=n()) %>%
ungroup()
west_coast <- c("Washington","Oregon","California")
pinots <- c("Burgundy","California","Oregon")
library(wesanderson)
jameson <- function(){
list(
theme_minimal() +
theme(
text = element_text(family = "Palatino", color = "gray25"),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(color = "gray30"),
plot.background = element_rect(fill = "gray95"),
plot.margin = unit(c(5, 10, 5, 10), units = "mm")
),
scale_color_manual(values = wes_palette(n=10, name="Moonrise3", type = "continuous")),
scale_fill_manual(values = wes_palette(n=10, name="Moonrise3", type = "continuous"))
)
}
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(id)
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0))
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0))
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0))
wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 200) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0))
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
View(pr_wine)
pr_wine
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1,PC2,PC3,PC4) %>%
filter(abs(PC1) >= 0.2 | abs(PC2) >= 0.2 | abs(PC3) >= 0.2 | abs(PC4) >= 0.2)
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1,PC2,PC3,PC4) %>%
filter(abs(PC1) >= 0.3 | abs(PC2) >= 0.3 | abs(PC3) >= 0.3 | abs(PC4) >= 0.3)
for(c in c("PC1","PC2","PC3","PC4")){
print(rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, c) %>%
filter(abs(c) >= 0.25)
)
}
for(comp in c("PC1","PC2","PC3","PC4")){
print(rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, comp) %>%
filter(abs(comp) >= 0.25)
)
}
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1) %>%
arrange(desc(PC1)) %>%
slice(1:5)
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1) %>%
arrange(desc(PC1)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC2) %>%
arrange(desc(PC2)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC3) %>%
arrange(desc(PC3)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC4) %>%
arrange(desc(PC4)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1) %>%
mutate(abs_load = abs(PC1))
arrange(desc(abs_load)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1) %>%
mutate(abs_load = abs(PC1)) %>%
arrange(desc(abs_load)) %>%
slice(1:5)
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC1) %>%
mutate(abs_load = abs(PC1)) %>%
arrange(desc(abs_load)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC2) %>%
mutate(abs_load = abs(PC2)) %>%
arrange(desc(abs_load)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC3) %>%
mutate(abs_load = abs(PC3)) %>%
arrange(desc(abs_load)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
select(word, PC4) %>%
mutate(abs_load = abs(PC4)) %>%
arrange(desc(abs_load)) %>%
slice(1:5)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
mutate(abs_load = abs(PC4)) %>%
arrange(desc(abs_load)) %>%
select(word, PC4) %>%
slice(1:5)
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
right_join(wine, by="id") %>%
replace(.,is.na(.),0) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
View(pr_wine)
View(pine)
screeplot(pr_wine)
screeplot(pr_wine, type = "lines")
pine <- wtxt %>%
filter(province=="Oregon") %>%
filter(variety=="Pinot Noir") %>%
filter(!(word %in% c("wine","pinot","drink","noir","vineyard","palate","notes","flavors","bottling","bottle","finish"))) %>%
filter(total > 400) %>%
count(id, word) %>%
group_by(id) %>%
mutate(exists = if_else(n>0,1,0)) %>%
ungroup %>%
pivot_wider(id_cols = id, names_from = word, values_from = exists, values_fill = c(exists=0)) %>%
select(-id)
pr_wine <- prcomp(x = pine, scale = T, center = T,rank. = 4)
screeplot(pr_wine, type = "lines")
screeplot(pr_wine, type = "lines")
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
mutate(abs_load = abs(PC1)) %>%
arrange(desc(abs_load)) %>%
select(word, PC1) %>%
slice(1:10)
rownames_to_column(as.data.frame(pr_wine$rotation),var = "word") %>%
mutate(abs_load = abs(PC2)) %>%
arrange(desc(abs_load)) %>%
select(word, PC2) %>%
slice(1:10)
